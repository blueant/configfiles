;; Emacs Load Path
(progn (cd "~/.emacs.d/plugins") (normal-top-level-add-subdirs-to-load-path))

;; This option is for macs to have the meta key from command
(setq mac-option-modifier 'meta)
(setq mac-command-notifier 'hyper)

;; MAC FONTS
(setq mac-allow-anti-aliasing nil)
(set-default-font "-*-Envy_Code_R-normal-*-*-*-11-*-*-*-*-*-*-*")

;; Emacs Path
(setenv "PATH" (concat (getenv "PATH") ":/usr/local/bin"))
(setq exec-path (append exec-path '("/usr/local/bin")))

;; Visible Bell
(setq visible-bell 1)

;; Parenthesis Matching
(show-paren-mode 1)

;; Programming in C
(setq c-set-style 'bsd)
(setq c-basic-offset 2)

;; NEW
(global-font-lock-mode t)
(windmove-default-keybindings)
(setq use-file-dialog nil)
(defalias 'yes-or-no-p 'y-or-n-p)
(setq transient-mark-mode t)
(setq line-number-mode t)
(setq column-number-mode t)

;; Remove GUI stuff
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'menu-bar-mode) (menu-bar-mode 1))

;;
;; Key bindings
;;
(global-set-key (kbd "C-c c") 'comment-region)
(global-set-key (kbd "C-c u") 'uncomment-region)

;;
;; Fit Frames
;;
(require 'fit-frame)
(global-set-key (kbd "C-_") 'fit-frame)

;;
;; ISwitch buffer
;;
(require 'ido)
(ido-mode t)
(setq ido-enable-flex-matching t) ;; enable fuzzy matching

;;
;; GoLang
;;
(require 'go-mode)

;;
;; Ruby on Rails stuff
;; 
;; nxml (HTML ERB template support)
;; (setq
;;  nxhtml-global-minor-mode t
;;  mumamo-chunk-coloring 'submode-colored
;;  nxhtml-skip-welcome t
;;  indent-region-mode t
;;  rng-nxml-auto-validate-flag nil
;;  nxml-degraded t)
;; (add-to-list 'auto-mode-alist '("\\.html\\.erb\\'" . eruby-nxhtml-mumamo))

;;
;; Ri-Ruby
;;
(autoload 'ri "/Users/sahilcooner/.emacs.d/plugins/ri-emacs/ri-ruby.el" nil t)
;;
;;  You may want to bind the ri command to a key.
;;  For example to bind it to F1 in ruby-mode:
;;  Method/class completion is also available.
;;
;; (add-hook 'ruby-mode-hook (lambda ()
;; 			    (local-set-key 'f1 'ri)
;; 			    (local-set-key "\M-\C-i" 'ri-ruby-complete-symbol)
;; 			    (local-set-key 'f4 'ri-ruby-show-args)
;; 			    ))

;;
;; Rails
;;
(require 'rails-autoload)

;;
;; rhtml-mode
;;
(require 'rhtml-mode)
(add-hook 'rhtml-mode-hook
     	  (lambda () (rinari-launch)))

;;
;; JSON
;;
(require 'json)

;;
;; GIT
;;
(require 'git)

;;
;; YASNIPPET
;;
(require 'yasnippet) ;; not yasnippet-bundle
(yas/initialize)
(setq yas/snippet-dirs "~/.emacs.d/plugins/yasnippet/snippets")
(yas/load-directory yas/snippet-dirs)

;;
;; Color Theme plugin
;;
(require 'color-theme)
(color-theme-initialize)
(color-theme-taming-mr-arneson)

;;
;; Scala
;;
(require 'scala-mode-auto)

; Scala Mode hooks
(defun me-turn-off-indent-tabs-mode ()
  (setq indent-tabs-mode nil))
(add-hook 'scala-mode-hook 'me-turn-off-indent-tabs-mode)

;;
;; Org-Mode
;;
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)


;;
;; TRAMP Plugin
;;
(require 'tramp)
(setq tramp-default-method "ssh")

;;
;; Backups
;;
; Force backups, added hook for before save
(setq version-control t ;; Use version numbers for backups
      kept-new-versions 16 ;; Number of newest versions to keep
      kept-old-versions 2 ;; Number of oldest versions to keep
      delete-old-versions t ;; Ask to delete excess backup versions?
      backup-directory-alist ;; don't leave emacs terds everywhere
      '(("." . "~/.emacs.d/saves")) ;; wipe butt in ~/.emacs.d/saves
      backup-by-copying-when-linked t) ;; Copy linked files, don't rename.
(defun force-backup-of-buffer ()
  (let ((buffer-backed-up nil))
    (backup-buffer)))
(add-hook 'before-save-hook  'force-backup-of-buffer)

; Autosave disabled
(setq auto-save-default nil)

;Tramp like backups left on remote server, no good, let's clean those up
(add-to-list 'backup-directory-alist
	     (cons "." "~/.emacs.d/saves/"))
(setq tramp-backup-directory-alist backup-directory-alist)


