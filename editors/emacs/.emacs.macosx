;; Emacs Load Path
(progn (cd "~/.emacs.d/plugins") (normal-top-level-add-subdirs-to-load-path))

;; This option is for macs to have the meta key from command
(setq mac-option-modifier 'meta)
(setq mac-command-notifier 'hyper)

;; MAC FONTS
(setq mac-allow-anti-aliasing nil)
(set-default-font "-*-ProggyTiny-normal-*-*-*-11-*-*-*-*-*-*-*")

;; Emacs Path
(setenv "PATH" (concat (getenv "PATH") ":/usr/local/bin"))
(setq exec-path (append exec-path '("/usr/local/bin")))

;; Visible Bell
(setq visible-bell 1)

;; Parenthesis Matching
(show-paren-mode 1)

;; Programming in C
(setq c-set-style 'bsd)
(setq c-basic-offset 4)

;; NEW
(global-font-lock-mode t)
(windmove-default-keybindings)
(setq use-file-dialog nil)
(defalias 'yes-or-no-p 'y-or-n-p)
(setq transient-mark-mode t)
(setq line-number-mode t)
(setq column-number-mode t)

;; Remove GUI stuff
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'menu-bar-mode) (menu-bar-mode 1))

;;
;; Fit Frames
;;
(require 'fit-frame)
(global-set-key (kbd "C-_") 'fit-frame)

;;
;; JSON
;;
(require 'json)

;;
;; GIT
;;
(require 'git)

;;
;; YASNIPPET
;;
(require 'yasnippet) ;; not yasnippet-bundle
(yas/initialize)
(yas/load-directory "~/.emacs.d/plugins/yasnippet/snippets")

;;
;; Color Theme plugin
;;
(require 'color-theme)
(color-theme-initialize)
(color-theme-taming-mr-arneson)

;;
;; Scala
;;
(require 'scala-mode-auto)

; Scala Mode hooks
(defun me-turn-off-indent-tabs-mode ()
  (setq indent-tabs-mode nil))
(add-hook 'scala-mode-hook 'me-turn-off-indent-tabs-mode)

;;
;; File Types for different modes
;;
;(add-to-list 'auto-mode-alist '(""\\.scala\\'" . scala-mode))

;;
;; TRAMP Plugin
;;
(require 'tramp)
(setq tramp-default-method "ssh")

;;
;; Backups
;;
; Force backups, added hook for before save
(setq version-control t ;; Use version numbers for backups
      kept-new-versions 16 ;; Number of newest versions to keep
      kept-old-versions 2 ;; Number of oldest versions to keep
      delete-old-versions t ;; Ask to delete excess backup versions?
      backup-directory-alist ;; don't leave emacs terds everywhere
      '(("." . "~/.emacs.d/saves")) ;; wipe butt in ~/.emacs.d/saves
      backup-by-copying-when-linked t) ;; Copy linked files, don't rename.
(defun force-backup-of-buffer ()
  (let ((buffer-backed-up nil))
    (backup-buffer)))
(add-hook 'before-save-hook  'force-backup-of-buffer)

; Autosave disabled
(setq auto-save-default nil)

;Tramp like backups left on remote server, no good, let's clean those up
(add-to-list 'backup-directory-alist
	     (cons "." "~/.emacs.d/saves/"))
(setq tramp-backup-directory-alist backup-directory-alist)
