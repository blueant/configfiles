;;
; Load Path
;;
(if (fboundp 'normal-top-level-add-subdirs-to-load-path)
    (let* ((my-lisp-dir "~/.emacs.d/plugins/")
	   (default-directory my-lisp-dir))
      (setq load-path (cons my-lisp-dir load-path))
      (normal-top-level-add-subdirs-to-load-path)))

;;
; Emacs Defaults
;;
(set-default-font "-*-lime-*-*-*-*-*-*-*-*-*-*-*-*") ; Default Font
(global-font-lock-mode t) ; Turn on font font locking

; Setq Defaults
(setq
 visible-bell 1 ; visual bell
 use-file-dialog nil ; don't use file dialogs
 line-number-mode t ; line numbers
 column-number-mode t ; column numbers
 transient-mark-mode t) ; transient mark mode 

;;
;; Emacs L&F 
;;
(setq inhibit-startup-screen t) ; disable startup screen
(windmove-default-keybindings)  ; winmove default keybindings enabled
(defalias 'yes-or-no-p 'y-or-n-p) ; make an alias for yes-or-no -> y-or-n
(show-paren-mode 1) ; paren matching

;; Add color to a shell running in emacs 'M-x shell'
(autoload 'ansi-color-for-comint-mode-on "ansi-color" nil t)
(add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)

; remove toolbar
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))

;;
; Colors
;;
(require 'color-theme)
(color-theme-initialize)
(color-theme-taming-mr-arneson)

(setq my-color-themes (list 'color-theme-taming-mr-arneson 'color-theme-dark-blue
			    'color-theme-billw 'color-theme-jsc-dark 
			    'color-theme-sitaramv-solaris 'color-theme-resolve
			    'color-theme-classic 'color-theme-jonadabian-slate
			    'color-theme-kingsajz 'color-theme-shaman
			    'color-theme-subtle-blue 'color-theme-snowish
			    'color-theme-sitaramv-nt 'color-theme-wheat))

(defun my-theme-set-default () ; Set the first row
  (interactive)
  (setq theme-current my-color-themes)
  (funcall (car theme-current)))

(defun my-describe-theme () ; Show the current theme
  (interactive)
  (message "%s" (car theme-current)))

					; Set the next theme (fixed by Chris Webber - tanks)
(defun my-theme-cycle ()		
  (interactive)
  (setq theme-current (cdr theme-current))
  (if (null theme-current)
      (setq theme-current my-color-themes))
  (funcall (car theme-current))
  (message "%S" (car theme-current)))

(setq theme-current my-color-themes)
(setq color-theme-is-global nil) ; Initialization
(my-theme-set-default)

;;
;; Programming Related
;;

; Yasnippet
(require 'yasnippet) 
(yas/initialize)
(yas/load-directory "~/.emacs.d/plugins/yasnippet/snippets")

; C programming style
(setq c-set-style 'ellemtel)

; Python Mode
(autoload 'python-mode "python-mode.el" "Python mode." t)
(setq auto-mode-alist
      (append '(("/*.\.py$" . python-mode)) auto-mode-alist))

;;
;; Backups
;;
(setq version-control t
      kept-new-versions 16
      kept-old-versions 10
      delete-old-versions t
      backup-directory-alist
      '(("." . "~/.emacs.d/saves"))) ; wipe butt in ~/.emacs.d/saves folder instead of file systems

; Tramp compatibility for emacs terds
(add-to-list 'backup-directory-alist
	     (cons "." "~/.emacs.d/saves/"))
(setq tramp-backup-directory-alist backup-directory-alist)


; key bindings
(global-set-key (kbd "<f1>") 'comment-region)
(global-set-key (kbd "<f2>") 'uncomment-region)
(global-set-key (kbd "<f5>") 'search-forward)
(global-set-key (kbd "<f6>") 'undo)
(global-set-key [f7] 'my-theme-cycle)
(global-set-key (kbd "<f11>") 'compile)
(global-set-key (kbd "<f12>") 'goto-line)